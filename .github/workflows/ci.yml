name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest -q

  flutter-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install Flutter dependencies
        working-directory: nutrition_app
        run: flutter pub get

      - name: Analyze Flutter code
        working-directory: nutrition_app
        run: flutter analyze

      - name: Run Flutter tests
        working-directory: nutrition_app
        run: flutter test

  # Optional: Security checks (enable if needed)
  # security:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11'
  #     - run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt bandit safety
  #         bandit -r app/ -f json -o bandit-report.json || true
  #         safety check --json --output safety-report.json || true

  # Note: GCP-dependent steps removed. If needed, inject credentials via secrets:
  # - name: Write GCP credentials
  #   if: secrets.GCP_SA_JSON != ''
  #   run: |
  #     echo "$GCP_SA_JSON" > ${HOME}/gcp-sa.json
  #   env:
  #     GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}

